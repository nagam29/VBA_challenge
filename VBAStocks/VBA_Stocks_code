

Sub alphatesting()

' --------------------------------------------
    ' LOOP THROUGH ALL SHEETS
' --------------------------------------------
For Each ws In Worksheets

    Dim mindate As Long
    Dim lastrow As Double
    
    'Check the last row
    lastrow = (ws.Cells(Rows.Count, "A").End(xlUp).Row + 1)
    MsgBox (lastrow)  '70927
     
    'Save the beginning of the year
    ' Every ticker gets the same open date within the same year
    mindate = ws.Cells(2, 2).Value
    MsgBox (mindate) '20160101
    
    'Create a new summary table shell
    'closing price at the end of that year, Yearly change, percent change, TotalStock Volume
    Dim Ticker As String
    Dim OpenPrice As Double ' use this for calculating yearly_change and percent_change
    Dim ClosePrice As Double 'use this for calculating yearly_change and percent_change
    Dim Percent_Change As Double
    Dim Total_Stock_Volume As Double
    
    'Create headers
    ws.Cells(1, 9).Value = "Ticker"
    ws.Cells(1, 10).Value = "Yearly_Change"
    ws.Cells(1, 11).Value = "Percent_Change"
    ws.Cells(1, 12).Value = "Total_Stock_Volume"

  ' Set an initial variable for Percent_Change, Total_Stock_Volume, OpenPrice, ClosePrice
    Percent_Change = 0
    Total_Stock_Volume = 0
    OpenPrice = 0
    ClosePrice = 0

    Dim Summary_table_row As Integer
    Summary_table_row = 2

    
    'Go through all the rows
    For J = 2 To lastrow
    
        If ws.Cells(J, 2).Value = mindate Then
            OpenPrice = ws.Cells(J, 3).Value
        End If
        
        
        ' Check if we are still within the same ticker, if it is not...
        If ws.Cells(J + 1, 1).Value <> ws.Cells(J, 1).Value Then
        
            'Fill Ticker column
            Ticker = ws.Cells(J, 1).Value
            ws.Range("I" & Summary_table_row).Value = Ticker
        
            'ClosePrice
            ClosePrice = ws.Cells(J, 6).Value
        
            'Yearly Change Calculation
            ws.Range("J" & Summary_table_row).Value = (ClosePrice - OpenPrice)
            
        
            'Percent change calculation. Do not calculate this if OpenPrice is 0
            If OpenPrice <> 0 Then
                Percent_Change = (ClosePrice - OpenPrice) / OpenPrice
                ws.Range("K" & Summary_table_row).Value = Format(Percent_Change, "Percent")
            End If
        
    
            'Calculate Total Volume
            Total_Stock_Volume = Total_Stock_Volume + ws.Cells(J, 7).Value
            ws.Range("L" & Summary_table_row).Value = Total_Stock_Volume
            
            ' Add 1 to the summary table row
            Summary_table_row = Summary_table_row + 1
            
            'reset Total_Stock_Volume
            Total_Stock_Volume = 0
            
        Else
            ' total volume calulation when one ticker is the same as the next ticker
            Total_Stock_Volume = Total_Stock_Volume + ws.Cells(J, 7).Value
            
        End If

        
    Next J
    
Next ws
    
End Sub


'Put colors on Yearly Change
'If I saparate this part from Sub alphatesting() above, the codes below seem to run more reliably

Sub color()

For Each ws In Worksheets

    Dim lastrow As Double
    lastrow = (ws.Cells(Rows.Count, "A").End(xlUp).Row + 1)
    
    For J = 2 To lastrow
            
        ' Conditionally fill cells with color
        
        If ws.Cells(J, 10).Value < 0 Then
            ws.Cells(J, 10).Interior.ColorIndex = 3 'Red
        ElseIf ws.Cells(J, 10).Value > 0 Then
            ws.Cells(J, 10).Interior.ColorIndex = 4 'Green
        End If
                
    Next J
    
Next ws

End Sub


' Challenge Question

Sub Summary()

For Each ws In Worksheets

    Dim lastrow As Double
    Dim Ticker As String
    Dim Value As Double
    lastrow = (ws.Cells(Rows.Count, "A").End(xlUp).Row + 1)

'Create table shell
    ws.Cells(2, 15).Value = "Greatest % Increase"
    ws.Cells(3, 15).Value = "Greatest % Decrease"
    ws.Cells(4, 15).Value = "Greatest Total Volume"
    ws.Cells(1, 16).Value = "Ticker"
    ws.Cells(1, 17).Value = "Value"

' initializing Greatest % Increase, Greatest % decrease, Greatest total volume
    ws.Cells(2, 17).Value = ws.Cells(2, 11).Value
    ws.Cells(3, 17).Value = ws.Cells(2, 11).Value
    ws.Cells(4, 17).Value = ws.Cells(2, 12).Value
    
' Calculate Greatest % Increase, Greatest % decrease, Greatest total volume
For J = 2 To lastrow
    
    'Finding the greatest increase
    If ws.Cells(J + 1, 11).Value > ws.Cells(2, 17).Value Then
        ws.Cells(2, 17).Value = ws.Cells(J + 1, 11).Value
        ws.Cells(2, 16).Value = ws.Cells(J + 1, 9).Value
    'Finding the greatest decrease
    ElseIf ws.Cells(J + 1, 11).Value < ws.Cells(3, 17).Value Then
        ws.Cells(3, 17).Value = ws.Cells(J + 1, 11).Value
        ws.Cells(3, 16).Value = ws.Cells(J + 1, 9).Value
    End If
    
    'Finding the greatest volume
    If ws.Cells(J + 1, 12).Value > ws.Cells(4, 17).Value Then
        ws.Cells(4, 17).Value = ws.Cells(J + 1, 12).Value
        ws.Cells(4, 16).Value = ws.Cells(J + 1, 9).Value
    End If
    
Next J

    'Converting the values to Percentage
    ws.Cells(2, 17).Value = Format(ws.Cells(2, 17).Value, "Percent")
    ws.Cells(3, 17).Value = Format(ws.Cells(3, 17).Value, "Percent")
    
Next ws

End Sub

